# GOAL
- 코드 리뷰란
- pull request의 flow 이해하기
- 코드 리뷰문화를 정착하기 위해 필요한것들 알아보기

# 코드리뷰
- 개발자가 작성한 코드를 다른 사람들이 검토하고 피드백을 전달하며, 다시 작성자가 반영하는 과정을 말한다. 이과정을 통해 서비스의 기술적인 구현 부분에 대해 공유 및 습득 할 수 있으며, 일괄된 아키텍처를 유지하고, 문제를 해결 할 수 있는 새로운 관점을 발견할 수도 있다.
- 더 나아가 잠재적인 장애 및 버그를 배포전에 발견하여 전반적인 서비스 운영 비용을 절약 할 수 있다.
- 가장 중요한 핵심은 단순히 코딩 스타일을 일괄되게 유지하거나, 예상되는 문제를 일찍 파악하는데 끝나지 않고 코드에 대한, 역할에 대한 책임이 개인에 있지 않고 우리 모두에게 우리 모두의 개발자에게 있다는 문화를 만드는데 있다고 할 수 있다.
[코드 리뷰 in 뱅크셀러드](https://blog.banksalad.com/tech/banksalad-code-review-culture/)
>
“소프트웨어를 유지보수하는 조직에서 코드 한 줄을 변경한다고 했을 때, 코드리뷰가 도입되기 전에는 그러한 변경의 55% 정도가 문제를 일으켰다. 그러나 리뷰 과정이 도입된 이후에는 그러한 변경의 2% 정도에서만 문제가 발생했다.”  - 코드 컴플릿, 스티브 맥코넬

# pull request flow 




## pull request를 하는 이유
- 자연스러운 코드 리뷰를 위해
- Push 권한이 없는 오픈 소스 프로젝트에 기여할 때
- 콜라보레이터에 소속되어있는 경우에는, 그 저장소에서 브런치를 따고 푸쉬하면 풀리퀘가 가능하다. + 에서 branch가 보이는 경우는 그 저장소만의 기능이다
- Push로 협업했을때, 다른 사람의 commit을 볼 일이 많지 않고, master branch와 merge할 때서야 보게되는데, Pull Request는 당장 merge하지 않는다는 규칙이 Pull Request를 보고, 코드에 신경쓰게되고 어떤 작업이 언제 적용되었는지 알 수 있다. 오히려 당황스러운 코드충돌을 줄일 수 있다.
